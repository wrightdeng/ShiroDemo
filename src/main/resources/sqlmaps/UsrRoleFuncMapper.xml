<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zifangsky.mapper.UsrRoleFuncMapper">
	<resultMap id="BaseResultMap" type="cn.zifangsky.model.UsrRoleFunc">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="roleId" property="roleid" jdbcType="INTEGER" />
		<result column="funcId" property="funcid" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="FuncResultMap" type="cn.zifangsky.model.UsrFunc">
		<id column="f_id" property="id" jdbcType="INTEGER" />
		<result column="f_name" property="name" jdbcType="VARCHAR" />
		<result column="f_description" property="description" jdbcType="VARCHAR" />
		<result column="f_code" property="code" jdbcType="VARCHAR" />
		<result column="f_url" property="url" jdbcType="VARCHAR" />
		<result column="f_status" property="status" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, roleId, funcId
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from usr_role_func
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from usr_role_func
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="cn.zifangsky.model.UsrRoleFunc">
		insert into usr_role_func (id, roleId, funcId
		)
		values (#{id,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER},
		#{funcid,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.zifangsky.model.UsrRoleFunc">
		insert into usr_role_func
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="roleid != null">
				roleId,
			</if>
			<if test="funcid != null">
				funcId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="roleid != null">
				#{roleid,jdbcType=INTEGER},
			</if>
			<if test="funcid != null">
				#{funcid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.zifangsky.model.UsrRoleFunc">
		update usr_role_func
		<set>
			<if test="roleid != null">
				roleId = #{roleid,jdbcType=INTEGER},
			</if>
			<if test="funcid != null">
				funcId = #{funcid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.zifangsky.model.UsrRoleFunc">
		update usr_role_func
		set roleId = #{roleid,jdbcType=INTEGER},
		funcId = #{funcid,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectFuncsByRoleId" resultMap="FuncResultMap"
		parameterType="java.lang.Integer">
		SELECT usr_func.id f_id,usr_func.name
		f_name,usr_func.description f_description,usr_func.code
		f_code,usr_func.url f_url,usr_func.status f_status from
		usr_role_func,usr_func WHERE usr_role_func.roleId =
		#{roleId,jdbcType=INTEGER} AND usr_role_func.funcId = usr_func.id
	</select>
</mapper>